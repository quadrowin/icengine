<?php

require_once dirname (__FILE__) . '/../../../../Class/Helper/Uri.php';

/**
 * Test class for Helper_Uri.
 * Generated by PHPUnit on 2011-07-06 at 04:22:09.
 */
class Helper_UriTest extends PHPUnit_Framework_TestCase
{

	/**
	 * @var Helper_Uri
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp ()
	{
		$this->object = new Helper_Uri;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown ()
	{
		
	}

	/**
	 * @todo Implement testHighDomain().
	 */
	public function testHighDomain ()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete (
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testReplaceGets().
	 */
	public function testReplaceGets ()
	{
		$tests = array (
			array (
				'url'		=> '/?a=1&b=2&c=3',
				'gets'	=> array (
					'a'		=> 10,
					'b'		=> 20
				),
				'result'	=> '/?a=10&b=20&c=3'
			),
			array (
				'url'		=> '/?a=1&b=2&c=3',
				'gets'	=> array (
					'd'		=> 10
				),
				'result'	=> '/?d=10&a=1&b=2&c=3'
			),
			array (
				'url'		=> '/page/',
				'gets'	=> array (
					'a'		=> 10,
					'b'		=> 20
				),
				'result'	=> '/page/?a=10&b=20'
			)
		);
		
		foreach ($tests as $test)
		{
			$result = Helper_Uri::replaceGets (
				$test ['gets'],
				false,
				$test ['url']
			);
			
			$this->assertEquals ($test ['result'], $result);
		}
	}

	/**
	 * @todo Implement testMainDomain().
	 */
	public function testMainDomain ()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete (
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testValidRedirect().
	 */
	public function testValidRedirect ()
	{
		$_SERVER ['HTTP_HOST'] = 'test.local';
		
		$tests = array (
			''			=> 'http://' . $_SERVER ['HTTP_HOST'],
			
			'/'			=> 'http://' . $_SERVER ['HTTP_HOST'] . '/',
			
			'/test/'	=> 'http://' . $_SERVER ['HTTP_HOST'] . '/test/',
			
			'http://' . $_SERVER ['HTTP_HOST']	=> 
				'http://' . $_SERVER ['HTTP_HOST']
		);
		
		foreach ($tests as $test => $expected)
		{
			$result = Helper_Uri::validRedirect ($test);
			$this->assertEquals ($expected, $result);
		}
	}

}

?>

<?php/** * Загрузка конфигурации из массива *  * @author goorus, morph */class Config_Array extends Objective{	/**	 * @inheritdoc	 */	public function __get($key)	{		if (!isset($this->data[$key])) {            return null;        }        $value = $this->data[$key];        if (is_string($value) && strpos($value, '::') === 0) {            $pos = strpos($value, '/');            $className = substr($value, 2, $pos - 2);            $path = substr($value, $pos + 1);            $serviceLocator = IcEngine::serviceLocator();            $configManager = $serviceLocator->getService('configManager');            $value = $configManager->get($className)->get($path);            $this->data[$key] = $value;        }        return $value;	}	/**	 * Получение конфига на основе базового и изменений.	 *      * @param array|Objective $base_config	 * @return Objective	 */	public function merge($baseConfig)	{		if (is_array ($baseConfig)) {			$baseConfig = new Objective($baseConfig);		}		$this->data = array_merge($baseConfig->asArray(), $this->data);		return $this;	}}